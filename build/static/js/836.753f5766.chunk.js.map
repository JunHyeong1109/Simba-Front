{"version":3,"file":"static/js/836.753f5766.chunk.js","mappings":"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","sources":["features/eventMap/map/KakaoLoader.js","features/eventMap/map/Location.js","features/eventMap/map/KaKaoMap.js","features/eventMap/eventList/EventList.js","features/eventMap/eventContent/EventContent.js","features/eventMap/EventMap.js","features/eventMap/index.js"],"sourcesContent":["let kakaoLoadingPromise = null;\r\n\r\nfunction loadKakaoMaps(appKey) {\r\n  if (window.kakao && window.kakao.maps) return Promise.resolve(window.kakao);\r\n  if (kakaoLoadingPromise) return kakaoLoadingPromise;\r\n\r\n  kakaoLoadingPromise = new Promise((resolve, reject) => {\r\n    const scriptId = \"kakao-maps-sdk\";\r\n    if (document.getElementById(scriptId)) {\r\n      document.getElementById(scriptId).addEventListener(\"load\", () => resolve(window.kakao), { once: true });\r\n      return;\r\n    }\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.id = scriptId;\r\n    script.async = true;\r\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${appKey}&libraries=services&autoload=false`;\r\n    script.onload = () => {\r\n      if (!window.kakao) return reject(new Error(\"Kakao SDK loaded but window.kakao is undefined\"));\r\n      window.kakao.maps.load(() => resolve(window.kakao));\r\n    };\r\n    script.onerror = () => reject(new Error(\"Failed to load Kakao SDK\"));\r\n    document.head.appendChild(script);\r\n  });\r\n\r\n  return kakaoLoadingPromise;\r\n}\r\n\r\nexport default loadKakaoMaps;","function getCurrentLocation(callback) {\r\n  navigator.geolocation.getCurrentPosition(\r\n    (position) => {\r\n      const lat = position.coords.latitude;\r\n      const lng = position.coords.longitude;\r\n      callback(lat, lng);\r\n    },\r\n    (error) => {\r\n      console.error(\"위치 정보 에러:\", error);\r\n    }\r\n  );\r\n}\r\n\r\nexport default getCurrentLocation;","/* eslint-env browser */\r\n// src/features/eventMap/map/KaKaoMap.js\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport loadKakaoMaps from \"./KakaoLoader\";\r\nimport getCurrentLocation from \"./Location\";\r\nimport api from \"../../../api\";\r\nimport \"./MapStyle.css\";\r\n\r\nconst KAKAO_APP_KEY = \"261b88294b81d5800071641ecc633dcb\";\r\n\r\n// 🔴 미션 마커용 빨간 아이콘 (SVG data URL)\r\nfunction makeRedMarkerImage(kakao) {\r\n  const svg = `\r\n    <svg xmlns='http://www.w3.org/2000/svg' width='32' height='46' viewBox='0 0 32 46'>\r\n      <path fill='#d93025' d='M16 0c8.284 0 15 6.716 15 15 0 11-15 31-15 31S1 26 1 15C1 6.716 7.716 0 16 0z'/>\r\n      <circle cx='16' cy='15' r='6' fill='white'/>\r\n    </svg>`;\r\n  const url = \"data:image/svg+xml;charset=UTF-8,\" + encodeURIComponent(svg);\r\n  const size = new kakao.maps.Size(32, 46);\r\n  const offset = new kakao.maps.Point(16, 46);\r\n  return new kakao.maps.MarkerImage(url, size, { offset });\r\n}\r\n\r\n// 날짜 YYYY-MM-DD\r\nconst fmtDate = (d) => {\r\n  if (!d) return \"\";\r\n  try {\r\n    const dt = new Date(d);\r\n    if (!isNaN(dt)) return dt.toISOString().slice(0, 10);\r\n  } catch {}\r\n  return String(d).slice(0, 10);\r\n};\r\n\r\n// 공통 인포윈도우 렌더러: 매장 + 주소 + 미션 섹션(없으면 \"미션이 없습니다.\")\r\nfunction renderStoreAndMissions({ name, desc, road, jibun, relatedMissions }) {\r\n  const missionHtml = (relatedMissions && relatedMissions.length > 0)\r\n    ? `\r\n      <div class=\"missionHeader\">미션</div>\r\n      <ul class=\"missionList\">\r\n        ${relatedMissions.slice(0, 3).map(ms => `\r\n          <li>\r\n            ${ms.title || \"미션\"}\r\n            ${ms.startAt || ms.startDate || ms.endAt || ms.endDate\r\n              ? ` <span class=\"infoMeta\">(${fmtDate(ms.startAt || ms.startDate)} ~ ${fmtDate(ms.endAt || ms.endDate)})</span>`\r\n              : \"\"}\r\n          </li>\r\n        `).join(\"\")}\r\n      </ul>\r\n      ${relatedMissions.length > 3 ? `<div class=\"infoMeta\">외 ${relatedMissions.length - 3}건</div>` : \"\"}\r\n    `\r\n    : `<div class=\"missionHeader\">미션</div><div class=\"missionEmpty\">미션이 없습니다.</div>`;\r\n\r\n  return `\r\n    <div class=\"infoWindow\">\r\n      <b class=\"infoTitle\">${name || \"매장\"}</b>\r\n      ${desc ? `<div class=\"infoMeta\">${desc}</div>` : \"\"}\r\n      ${(road || jibun) ? `<hr class=\"infoDivider\" />` : \"\"}\r\n      ${road ? `<div class=\"infoAddr\"><span class=\"infoLabel\">도로명:</span>${road}</div>` : \"\"}\r\n      ${jibun ? `<div class=\"infoAddr\"><span class=\"infoLabel\">지번:</span>${jibun}</div>` : \"\"}\r\n      <hr class=\"infoDivider\" />\r\n      ${missionHtml}\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport default function KaKaoMap({ onMissionSelect, storeIdToFocus, focus }) {\r\n  const [missions, setMissions] = useState([]); // 진행 가능한 미션\r\n  const [stores, setStores] = useState([]);     // 모든 매장\r\n\r\n  const mapRef = useRef(null);\r\n  const geocoderRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const centerAddrRef = useRef(null);\r\n  const initialized = useRef(false);\r\n\r\n  // 미션 마커/윈도우\r\n  const missionMarkersRef = useRef([]);\r\n  const missionMarkerIndexRef = useRef(new Map());\r\n  const missionInfoWindowRef = useRef(null);\r\n  const openedMarkerRef = useRef(null); // 미션 토글 추적\r\n\r\n  // 매장 마커/윈도우\r\n  const storeMarkersRef = useRef([]);\r\n  const storeInfoWindowRef = useRef(null);\r\n  const openedStoreMarkerRef = useRef(null); // 매장 토글 추적\r\n\r\n  // URL 포커스용(미션 없어도 표시)\r\n  const focusMarkerRef = useRef(null);\r\n  const focusInfoWindowRef = useRef(null);\r\n\r\n  const onMissionSelectRef = useRef(onMissionSelect);\r\n  useEffect(() => { onMissionSelectRef.current = onMissionSelect; }, [onMissionSelect]);\r\n\r\n  // 1) 지도 초기화\r\n  useEffect(() => {\r\n    if (initialized.current) return;\r\n    initialized.current = true;\r\n\r\n    let onMapIdle = null;\r\n\r\n    (async () => {\r\n      getCurrentLocation(async (lat, lng) => {\r\n        const kakao = await loadKakaoMaps(KAKAO_APP_KEY);\r\n        const container = containerRef.current;\r\n        if (!container) return;\r\n\r\n        const map = new kakao.maps.Map(container, {\r\n          center: new kakao.maps.LatLng(lat, lng),\r\n          level: 3,\r\n        });\r\n        mapRef.current = map;\r\n\r\n        geocoderRef.current = new kakao.maps.services.Geocoder();\r\n        missionInfoWindowRef.current = new kakao.maps.InfoWindow({ zIndex: 3 });\r\n        storeInfoWindowRef.current = new kakao.maps.InfoWindow({ zIndex: 2 });\r\n\r\n        const searchAddrFromCoords = (coords, cb) => {\r\n          geocoderRef.current?.coord2RegionCode(\r\n            coords.getLng(),\r\n            coords.getLat(),\r\n            cb\r\n          );\r\n        };\r\n        const displayCenterInfo = (result, status) => {\r\n          if (status === kakao.maps.services.Status.OK) {\r\n            const el = centerAddrRef.current;\r\n            if (!el) return;\r\n            for (let i = 0; i < result.length; i++) {\r\n              if (result[i].region_type === \"H\") {\r\n                el.textContent = result[i].address_name;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n        onMapIdle = () => searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n        kakao.maps.event.addListener(map, \"idle\", onMapIdle);\r\n      });\r\n    })();\r\n\r\n    return () => {\r\n      const kakao = window.kakao;\r\n      if (kakao && mapRef.current && onMapIdle) {\r\n        kakao.maps.event.removeListener(mapRef.current, \"idle\", onMapIdle);\r\n      }\r\n      missionMarkersRef.current.forEach((m) => m.setMap(null));\r\n      missionMarkersRef.current = [];\r\n      missionMarkerIndexRef.current.clear();\r\n      missionInfoWindowRef.current?.close();\r\n      openedMarkerRef.current = null;\r\n\r\n      storeMarkersRef.current.forEach((m) => m.setMap(null));\r\n      storeMarkersRef.current = [];\r\n      storeInfoWindowRef.current?.close();\r\n      openedStoreMarkerRef.current = null;\r\n\r\n      focusInfoWindowRef.current?.close();\r\n      if (focusMarkerRef.current) {\r\n        focusMarkerRef.current.setMap(null);\r\n        focusMarkerRef.current = null;\r\n      }\r\n\r\n      mapRef.current = null;\r\n      geocoderRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // 2-A) joinable 미션\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/missions/joinable\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n        if (!alive) return;\r\n        setMissions(list);\r\n      } catch {\r\n        if (!alive) return;\r\n        setMissions([]);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  // 2-B) 모든 매장\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/stores\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n        const normalized = list.map((s) => ({\r\n          ...s,\r\n          latitude: s?.latitude != null ? Number(s.latitude) : undefined,\r\n          longitude: s?.longitude != null ? Number(s.longitude) : undefined,\r\n        }));\r\n        if (!alive) return;\r\n        setStores(normalized);\r\n      } catch {\r\n        if (!alive) return;\r\n        setStores([]);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  // 3-A) 미션 마커 (공통 템플릿 + 클릭 토글)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    const geocoder = geocoderRef.current;\r\n    if (!kakao || !map || !geocoder) return;\r\n\r\n    missionMarkersRef.current.forEach((m) => m.setMap(null));\r\n    missionMarkersRef.current = [];\r\n    missionMarkerIndexRef.current.clear();\r\n    missionInfoWindowRef.current?.close();\r\n    openedMarkerRef.current = null;\r\n\r\n    const toNum = (v) => {\r\n      if (v === null || v === undefined || v === \"\") return undefined;\r\n      const n = typeof v === \"string\" ? Number(v) : v;\r\n      return Number.isFinite(n) ? n : undefined;\r\n    };\r\n\r\n    missions.forEach((ms) => {\r\n      const lat = toNum(ms?.store?.latitude) ?? toNum(ms.latitude);\r\n      const lng = toNum(ms?.store?.longitude) ?? toNum(ms.longitude);\r\n      if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n      const pos = new kakao.maps.LatLng(lat, lng);\r\n      const marker = new kakao.maps.Marker({\r\n        position: pos,\r\n        map,\r\n        title: ms.title,\r\n        zIndex: 3,\r\n        image: makeRedMarkerImage(kakao),\r\n      });\r\n\r\n      if (ms?.id != null) missionMarkerIndexRef.current.set(ms.id, marker);\r\n\r\n      kakao.maps.event.addListener(marker, \"click\", () => {\r\n        // 토글: 같은 마커 재클릭 시 닫기\r\n        if (openedMarkerRef.current === marker) {\r\n          missionInfoWindowRef.current?.close();\r\n          openedMarkerRef.current = null;\r\n          return;\r\n        }\r\n\r\n        geocoder.coord2Address(lng, lat, (res, status) => {\r\n          let road = \"\", jibun = \"\";\r\n          if (status === kakao.maps.services.Status.OK && res?.[0]) {\r\n            road = res.find((r) => r.road_address)?.road_address?.address_name || \"\";\r\n            jibun = res[0]?.address?.address_name || \"\";\r\n          }\r\n\r\n          // 공통 템플릿: \"해당 매장\" + \"미션 1개(이 마커의 미션)\"\r\n          const storeName = ms?.store?.name || ms?.storeName || \"매장\";\r\n          const html = renderStoreAndMissions({\r\n            name: storeName,\r\n            desc: ms?.description || ms?.desc || \"\",\r\n            road, jibun,\r\n            relatedMissions: [ms],\r\n          });\r\n\r\n          missionInfoWindowRef.current?.setContent(html);\r\n          missionInfoWindowRef.current?.open(map, marker);\r\n          openedMarkerRef.current = marker;\r\n\r\n          onMissionSelectRef.current?.({\r\n            mission: ms, lat, lng, address: { road, jibun }\r\n          });\r\n        });\r\n      });\r\n\r\n      missionMarkersRef.current.push(marker);\r\n    });\r\n  }, [missions]);\r\n\r\n  // 3-B) 매장 마커 (공통 템플릿 + 클릭 토글 + 미션 없으면 안내)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    const geocoder = geocoderRef.current;\r\n    if (!kakao || !map || !geocoder) return;\r\n\r\n    storeMarkersRef.current.forEach((m) => m.setMap(null));\r\n    storeMarkersRef.current = [];\r\n    storeInfoWindowRef.current?.close();\r\n    openedStoreMarkerRef.current = null;\r\n\r\n    // 매장-미션 매핑\r\n    const missionsByStoreId = new Map();\r\n    missions.forEach((ms) => {\r\n      const sid = ms?.store?.id ?? ms?.storeId;\r\n      if (sid == null) return;\r\n      if (!missionsByStoreId.has(sid)) missionsByStoreId.set(sid, []);\r\n      missionsByStoreId.get(sid).push(ms);\r\n    });\r\n\r\n    stores.forEach((s) => {\r\n      const lat = Number(s.latitude);\r\n      const lng = Number(s.longitude);\r\n      if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n      const pos = new kakao.maps.LatLng(lat, lng);\r\n      const marker = new kakao.maps.Marker({\r\n        position: pos,\r\n        map,\r\n        title: s.name,\r\n        zIndex: 2,\r\n      });\r\n\r\n      kakao.maps.event.addListener(marker, \"click\", () => {\r\n        // 토글\r\n        if (openedStoreMarkerRef.current === marker) {\r\n          storeInfoWindowRef.current?.close();\r\n          openedStoreMarkerRef.current = null;\r\n          return;\r\n        }\r\n\r\n        geocoder.coord2Address(lng, lat, (res, status) => {\r\n          let road = \"\", jibun = \"\";\r\n          if (status === kakao.maps.services.Status.OK && res?.[0]) {\r\n            road = res.find((r) => r.road_address)?.road_address?.address_name || \"\";\r\n            jibun = res[0]?.address?.address_name || \"\";\r\n          }\r\n\r\n          const related = missionsByStoreId.get(s.id ?? s.storeId) || [];\r\n          const html = renderStoreAndMissions({\r\n            name: s.name || \"매장\",\r\n            desc: s.description || \"\",\r\n            road, jibun,\r\n            relatedMissions: related,\r\n          });\r\n\r\n          storeInfoWindowRef.current?.setContent(html);\r\n          storeInfoWindowRef.current?.open(map, marker);\r\n          openedStoreMarkerRef.current = marker;\r\n        });\r\n      });\r\n\r\n      storeMarkersRef.current.push(marker);\r\n    });\r\n  }, [stores, missions]);\r\n\r\n  // 4-A) /map?storeId=... → 해당 위치로 이동 + 공통 템플릿 (미션 없으면 안내)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    const geocoder = geocoderRef.current;\r\n    if (!kakao || !map || !geocoder || !storeIdToFocus) return;\r\n\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(`/itda/stores/${storeIdToFocus}`);\r\n        const toNum = (v) => (v === null || v === undefined || v === \"\" ? undefined : Number(v));\r\n        const lat = toNum(data?.latitude);\r\n        const lng = toNum(data?.longitude);\r\n        if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n        const pos = new kakao.maps.LatLng(lat, lng);\r\n        map.panTo(pos);\r\n\r\n        // 포커스 마커\r\n        if (!focusMarkerRef.current) {\r\n          focusMarkerRef.current = new kakao.maps.Marker({ zIndex: 4 });\r\n        }\r\n        focusMarkerRef.current.setPosition(pos);\r\n        focusMarkerRef.current.setMap(map);\r\n\r\n        // 상세 주소 + 관련 미션\r\n        geocoder.coord2Address(lng, lat, (res, status) => {\r\n          let road = \"\", jibun = \"\";\r\n          if (status === kakao.maps.services.Status.OK && res?.[0]) {\r\n            road = res.find((r) => r.road_address)?.road_address?.address_name || \"\";\r\n            jibun = res[0]?.address?.address_name || \"\";\r\n          }\r\n\r\n          // 현재 보유한 missions에서 해당 매장 관련 미션 찾기\r\n          const related = missions.filter(ms => {\r\n            const sid = ms?.store?.id ?? ms?.storeId;\r\n            return String(sid) === String(storeIdToFocus);\r\n          });\r\n\r\n          const html = renderStoreAndMissions({\r\n            name: data?.name || \"매장\",\r\n            desc: data?.description || \"\",\r\n            road, jibun,\r\n            relatedMissions: related,\r\n          });\r\n\r\n          if (!focusInfoWindowRef.current) {\r\n            focusInfoWindowRef.current = new kakao.maps.InfoWindow({ zIndex: 4 });\r\n          }\r\n          focusInfoWindowRef.current.setContent(html);\r\n          focusInfoWindowRef.current.open(map, focusMarkerRef.current);\r\n        });\r\n      } catch (e) {\r\n        console.warn(\"store focus failed:\", e?.response?.data || e);\r\n      }\r\n    })();\r\n  }, [storeIdToFocus, missions]);\r\n\r\n  // 4-B) 리스트 선택 시: 좌표로만 이동(인포윈도우 자동 오픈 없음)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    if (!kakao || !map || !focus) return;\r\n\r\n    const lat = Number(focus.lat);\r\n    const lng = Number(focus.lng);\r\n    if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n    const pos = new kakao.maps.LatLng(lat, lng);\r\n    map.panTo(pos);\r\n  }, [focus]);\r\n\r\n  return (\r\n    <div className=\"map_wrap\">\r\n      <div id=\"map\" ref={containerRef} className=\"map_canvas\" />\r\n      <div className=\"hAddr\">\r\n        <span className=\"title\">지도중심기준 행정동 주소정보</span>\r\n        <span id=\"centerAddr\" ref={centerAddrRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/features/eventMap/eventList/EventList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../../../api\"; // 프로젝트 구조에 맞게 경로 확인\r\nimport \"./EventList.css\";\r\n\r\nfunction EventList({\r\n  status = \"joinable\", // \"joinable\" | \"SCHEDULED\" | \"ONGOING\" | \"ENDED\"\r\n  storeId,             // 특정 매장만 보고 싶을 때\r\n  onSelect,            // 카드 클릭 시 onSelect({ mission, lat, lng })\r\n}) {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  // 날짜 헬퍼 & 상태 판별\r\n  const toDate = (v) => {\r\n    if (!v) return null;\r\n    const d = new Date(v);\r\n    return isNaN(d) ? null : d;\r\n  };\r\n  const isExpired = (m, now = new Date()) => {\r\n    const end = toDate(m.endAt || m.endDate);\r\n    return !!(end && end < now);\r\n  };\r\n  const isScheduled = (m, now = new Date()) => {\r\n    const start = toDate(m.startAt || m.startDate);\r\n    return !!(start && start > now);\r\n  };\r\n  const isOngoing = (m, now = new Date()) => {\r\n    // 시작일이 미래가 아니고, 종료일이 지났지 않으면 진행중으로 간주\r\n    return !isScheduled(m, now) && !isExpired(m, now);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      setLoading(true);\r\n      setErr(\"\");\r\n      try {\r\n        const statusParam = (status ?? \"\").toString();\r\n        const statusUpper = statusParam.toUpperCase();\r\n\r\n        // 1) 서버 요청 URL 구성\r\n        let url = \"\";\r\n        if (statusParam === \"joinable\") {\r\n          url = \"/itda/missions/joinable\";\r\n        } else if (storeId && statusParam) {\r\n          url = `/itda/missions?storeId=${storeId}&status=${encodeURIComponent(\r\n            statusUpper\r\n          )}`;\r\n        } else if (storeId) {\r\n          url = `/itda/missions?storeId=${storeId}`;\r\n        } else if (statusParam) {\r\n          url = `/itda/missions?status=${encodeURIComponent(statusUpper)}`;\r\n        } else {\r\n          url = \"/itda/missions/joinable\";\r\n        }\r\n\r\n        const { data } = await api.get(url);\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n        if (!alive) return;\r\n\r\n        // 2) 좌표 숫자화\r\n        const normalized = list.map((m) => {\r\n          const s = m.store || {};\r\n          const toNum = (v) =>\r\n            v === null || v === undefined || v === \"\"\r\n              ? undefined\r\n              : Number.isFinite(v)\r\n              ? v\r\n              : Number(v);\r\n          return {\r\n            ...m,\r\n            _store: {\r\n              ...s,\r\n              latitude: toNum(s.latitude),\r\n              longitude: toNum(s.longitude),\r\n            },\r\n          };\r\n        });\r\n\r\n        // 3) 클라이언트 측 필터 (서버 신뢰 + 보강)\r\n        const now = new Date();\r\n        let out = normalized;\r\n\r\n        if (statusParam === \"joinable\" || statusUpper === \"ONGOING\") {\r\n          out = normalized.filter((m) => isOngoing(m, now));\r\n        } else if (statusUpper === \"SCHEDULED\") {\r\n          out = normalized.filter((m) => isScheduled(m, now));\r\n        } else if (statusUpper === \"ENDED\") {\r\n          out = normalized.filter((m) => isExpired(m, now));\r\n        } else if (storeId && !statusParam) {\r\n          // 메인/매장 전용: status 미지정이면 만료 숨김\r\n          out = normalized.filter((m) => isOngoing(m, now));\r\n        }\r\n\r\n        setItems(out);\r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setErr(e?.response?.data?.message || \"미션 목록을 불러오지 못했습니다.\");\r\n        setItems([]);\r\n      } finally {\r\n        if (alive) setLoading(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, [status, storeId]);\r\n\r\n  const hasItems = items.length > 0;\r\n\r\n  const fmtDate = (d) => {\r\n    if (!d) return \"\";\r\n    try {\r\n      const dt = new Date(d);\r\n      if (!isNaN(dt)) return dt.toISOString().slice(0, 10);\r\n    } catch {}\r\n    return String(d).slice(0, 10);\r\n  };\r\n\r\n  const getPoster = (m) =>\r\n    m.posterUrl || m.poster || m.imageUrl || m.thumbnailUrl || \"\";\r\n\r\n  const handleClick = (m) => {\r\n    const lat = m?._store?.latitude ?? m?.latitude;\r\n    const lng = m?._store?.longitude ?? m?.longitude;\r\n    onSelect?.({ mission: m, lat, lng });\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-list\" role=\"region\" aria-label=\"진행 가능 미션 목록\">\r\n      {loading && <div className=\"event-list-empty\">불러오는 중...</div>}\r\n      {!loading && err && <div className=\"event-list-error\">{err}</div>}\r\n      {!loading && !err && !hasItems && (\r\n        <div className=\"event-list-empty\">등록된 미션이 없습니다.</div>\r\n      )}\r\n\r\n      {!loading && !err && hasItems && (\r\n        <ul className=\"event-list-grid\">\r\n          {items.map((m) => {\r\n            const poster = getPoster(m);\r\n            const storeName = m?.store?.name || m?.storeName || \"\";\r\n            const start = m?.startAt || m?.startDate;\r\n            const end = m?.endAt || m?.endDate;\r\n\r\n            return (\r\n              <li\r\n                key={m.id}\r\n                className=\"event-card\"\r\n                onClick={() => handleClick(m)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && handleClick(m)}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label={`${m.title || \"미션\"} 선택`}\r\n                title={m.title || \"미션\"}\r\n              >\r\n                <div className=\"event-card-thumb\">\r\n                  {poster && <img src={poster} alt=\"미션 포스터\" />}\r\n                </div>\r\n                <div className=\"event-card-body\">\r\n                  <div className=\"event-card-title\">{m.title || \"미션\"}</div>\r\n                  {storeName && (\r\n                    <div className=\"event-card-store\">{storeName}</div>\r\n                  )}\r\n                  {(start || end) && (\r\n                    <div className=\"event-card-dates\">\r\n                      {fmtDate(start)} ~ {fmtDate(end)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventList;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation, useOutletContext } from \"react-router-dom\";\r\nimport api from \"../../../api\";\r\nimport \"./EventContent.css\";\r\n\r\nexport default function EventContent({ selected, loginRoute = \"/login\" }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const outletCtx = useOutletContext?.();\r\n  const authUser = outletCtx?.user || null;\r\n\r\n  const [checking, setChecking] = useState(false);\r\n\r\n  if (!selected) {\r\n    return (\r\n      <div className=\"event-detail empty\">\r\n        <span className=\"placeholder\">미션의 상세 내용</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const mission = selected.mission || selected;\r\n  const store = mission.store || {};\r\n\r\n  const poster =\r\n    mission.posterUrl ||\r\n    mission.poster ||\r\n    mission.imageUrl ||\r\n    mission.thumbnailUrl ||\r\n    \"\";\r\n\r\n  const title = mission.title || \"미션\";\r\n  const desc = mission.description || mission.desc || \"\";\r\n  const start = mission.startAt || mission.startDate || \"\";\r\n  const end = mission.endAt || mission.endDate || \"\";\r\n\r\n  const reward =\r\n    mission.rewardCount ??\r\n    mission.reward ??\r\n    mission.quantity ??\r\n    mission.rewardQty ??\r\n    null;\r\n\r\n  const storeName = store.name || mission.storeName || \"-\";\r\n  const storeAddr =\r\n    selected.address?.road ||\r\n    store.address ||\r\n    mission.address ||\r\n    selected.address?.jibun ||\r\n    \"-\";\r\n\r\n  const lat = selected.lat ?? store.latitude ?? mission.latitude ?? null;\r\n  const lng = selected.lng ?? store.longitude ?? mission.longitude ?? null;\r\n\r\n  // 가능한 키들에서 missionId 추출\r\n  const missionId =\r\n    mission.id ??\r\n    mission.missionId ??\r\n    selected.id ??\r\n    selected.missionId ??\r\n    null;\r\n\r\n  const fmtDate = (d) => {\r\n    if (!d) return \"-\";\r\n    try {\r\n      const dt = new Date(d);\r\n      if (!isNaN(dt)) return dt.toISOString().slice(0, 10);\r\n    } catch {}\r\n    return String(d).slice(0, 10);\r\n  };\r\n\r\n  const goToReview = async () => {\r\n    if (!missionId || checking) {\r\n      if (!missionId) alert(\"미션 ID가 없어 리뷰 페이지로 이동할 수 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    const reviewPath = `/review?missionId=${encodeURIComponent(missionId)}`;\r\n\r\n    // 1) 클라이언트가 이미 '로그인 아님'이라고 아는 경우 즉시 로그인으로\r\n    if (!authUser) {\r\n      navigate(`${loginRoute}?next=${encodeURIComponent(reviewPath)}`);\r\n      return;\r\n    }\r\n\r\n    // 2) (선택) 서버 세션 확인 – 실패하면 로그인으로 보냄\r\n    try {\r\n      setChecking(true);\r\n      await api.get(\"/itda/me\"); // 200이면 세션 유효\r\n      navigate(reviewPath, {\r\n        state: {\r\n          missionId,\r\n          title,\r\n          storeName,\r\n          storeAddr,\r\n          from: location.pathname + location.search,\r\n        },\r\n      });\r\n    } catch {\r\n      navigate(`${loginRoute}?next=${encodeURIComponent(reviewPath)}`);\r\n    } finally {\r\n      setChecking(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-detail\">\r\n      <div className=\"poster-col\">\r\n        {poster ? (\r\n          <img src={poster} alt={`${title} 포스터`} className=\"poster-img\" />\r\n        ) : (\r\n          <div className=\"poster-placeholder\">포스터 없음</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"info-col\">\r\n        <div className=\"title\">{title}</div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">기간</span>\r\n          <span className=\"value\">\r\n            {fmtDate(start)} ~ {fmtDate(end)}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">보상 수량</span>\r\n          <span className=\"value\">{reward ?? \"-\"}</span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">매장</span>\r\n          <span className=\"value\">{storeName}</span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">주소</span>\r\n          <span className=\"value\">{storeAddr}</span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">좌표</span>\r\n          <span className=\"value\">\r\n            {lat != null && lng != null ? `${lat}, ${lng}` : \"-\"}\r\n          </span>\r\n        </div>\r\n\r\n        {desc && (\r\n          <div className=\"desc\">\r\n            <div className=\"label\">설명</div>\r\n            <div className=\"value\">{desc}</div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"event-btn primary\"\r\n            onClick={goToReview}\r\n            disabled={!missionId || checking}\r\n            aria-disabled={!missionId || checking}\r\n            title={\r\n              missionId\r\n                ? checking\r\n                  ? \"확인 중…\"\r\n                  : \"이 미션에 대한 리뷰 작성\"\r\n                : \"미션 ID가 없어 이동할 수 없습니다\"\r\n            }\r\n          >\r\n            {checking ? \"확인 중…\" : \"리뷰 작성\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/features/eventMap/EventMap.js\r\nimport { useState, useCallback } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport KaKaoMap from \"./map/KaKaoMap\";\r\nimport EventList from \"./eventList/EventList\";\r\nimport EventContent from \"./eventContent/EventContent\";\r\nimport \"./EventMap.css\";\r\n\r\nexport default function EventMap() {\r\n  const [selected, setSelected] = useState(null); // { mission, lat, lng, address? }\r\n\r\n  // /map?storeId=123 → 해당 매장 위치로 지도 포커스\r\n  const [params] = useSearchParams();\r\n  const storeIdParam = params.get(\"storeId\");\r\n  const storeIdToFocus = storeIdParam ? Number(storeIdParam) : null;\r\n\r\n  // 마커 클릭 시 하단 상세 갱신 (레퍼런스 고정)\r\n  const handleMissionSelect = useCallback((payload) => {\r\n    setSelected(payload);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"event-page-80\">\r\n      <div className=\"map-list-layout\">\r\n        {/* 왼쪽: 미션 리스트 (미션만 표시) */}\r\n        <div className=\"list-col\">\r\n          <EventList\r\n            onSelect={({ mission, lat, lng }) =>\r\n              setSelected({ mission, lat, lng })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* 오른쪽: 지도 */}\r\n        <div className=\"map-col\">\r\n          <KaKaoMap\r\n            // 메인에서 매장 클릭 시 포커스\r\n            storeIdToFocus={storeIdToFocus}\r\n            // 리스트에서 미션 클릭 시 포커스(좌표 기반)\r\n            focus={selected}\r\n            // 마커 클릭 시 하단 상세 반영\r\n            onMissionSelect={handleMissionSelect}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 하단 상세 패널 */}\r\n      <EventContent selected={selected} />\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport EventMap from \"./EventMap\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<EventMap />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["kakaoLoadingPromise","appKey","window","kakao","maps","Promise","resolve","reject","scriptId","document","getElementById","addEventListener","once","script","createElement","id","async","src","concat","onload","Error","load","onerror","head","appendChild","callback","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","error","console","KAKAO_APP_KEY","makeRedMarkerImage","url","encodeURIComponent","size","Size","offset","Point","MarkerImage","fmtDate","d","dt","Date","isNaN","toISOString","slice","_unused","String","renderStoreAndMissions","_ref","name","desc","road","jibun","relatedMissions","missionHtml","length","map","ms","title","startAt","startDate","endAt","endDate","join","KaKaoMap","_ref2","onMissionSelect","storeIdToFocus","focus","missions","setMissions","useState","stores","setStores","mapRef","useRef","geocoderRef","containerRef","centerAddrRef","initialized","missionMarkersRef","missionMarkerIndexRef","Map","missionInfoWindowRef","openedMarkerRef","storeMarkersRef","storeInfoWindowRef","openedStoreMarkerRef","focusMarkerRef","focusInfoWindowRef","onMissionSelectRef","useEffect","current","onMapIdle","getCurrentLocation","loadKakaoMaps","container","center","LatLng","level","services","Geocoder","InfoWindow","zIndex","searchAddrFromCoords","cb","_geocoderRef$current","coord2RegionCode","getLng","getLat","displayCenterInfo","result","status","Status","OK","el","i","region_type","textContent","address_name","getCenter","event","addListener","_missionInfoWindowRef","_storeInfoWindowRef$c","_focusInfoWindowRef$c","removeListener","forEach","m","setMap","clear","close","alive","data","api","list","Array","isArray","items","_unused2","normalized","s","_objectSpread","Number","undefined","_unused3","_missionInfoWindowRef2","geocoder","toNum","v","n","isFinite","_toNum","_ms$store","_toNum2","_ms$store2","store","pos","marker","Marker","image","set","_missionInfoWindowRef3","coord2Address","res","_ms$store3","_missionInfoWindowRef4","_missionInfoWindowRef5","_onMissionSelectRef$c","_res$find","_res$find$road_addres","_res$","_res$$address","find","r","road_address","address","html","storeName","description","setContent","open","call","mission","push","_storeInfoWindowRef$c2","missionsByStoreId","_ms$store$id","_ms$store4","sid","storeId","has","get","_storeInfoWindowRef$c3","_s$id","_storeInfoWindowRef$c4","_storeInfoWindowRef$c5","_res$find2","_res$find2$road_addre","_res$2","_res$2$address","related","panTo","setPosition","_res$find3","_res$find3$road_addre","_res$3","_res$3$address","filter","_ms$store$id2","_ms$store5","e","_e$response","warn","response","_jsxs","className","children","_jsx","ref","onSelect","setItems","loading","setLoading","err","setErr","toDate","isExpired","now","arguments","end","isScheduled","start","isOngoing","statusParam","toString","statusUpper","toUpperCase","_store","out","_e$response$data","message","hasItems","handleClick","_m$_store$latitude","_m$_store","_m$_store$longitude","_m$_store2","role","_m$store","poster","posterUrl","imageUrl","thumbnailUrl","getPoster","onClick","onKeyDown","key","tabIndex","alt","EventContent","_ref3","_ref4","_mission$rewardCount","_selected$address","_selected$address2","_ref5","_ref6","_selected$lat","_ref7","_ref8","_selected$lng","_ref9","_ref0","_ref1","_mission$id","selected","loginRoute","navigate","useNavigate","location","useLocation","outletCtx","useOutletContext","authUser","user","checking","setChecking","reward","rewardCount","quantity","rewardQty","storeAddr","missionId","type","alert","reviewPath","state","from","pathname","search","disabled","EventMap","setSelected","params","useSearchParams","storeIdParam","handleMissionSelect","useCallback","payload","EventList","MapFeature","Routes","Route","index","element","path","Navigate","to","replace"],"sourceRoot":""}