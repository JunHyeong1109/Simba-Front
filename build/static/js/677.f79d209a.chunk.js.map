{"version":3,"file":"static/js/677.f79d209a.chunk.js","mappings":"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","sources":["features/review/Review.js","features/review/index.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport api from \"../../api\"; // 경로는 프로젝트에 맞게 조정\r\nimport \"./Review.css\";\r\n\r\nexport default function ReviewPage() {\r\n  // 로그인 유저 불러오기 (/itda/me 기준)\r\n  const [user, setUser] = useState(null);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n\r\n  // 작성 가능 여부: REVIEWER만 가능\r\n  const isReviewer = (user?.role || \"\").toString().toUpperCase() === \"REVIEWER\";\r\n\r\n  // 리뷰 상태\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  // 입력 상태\r\n  const [text, setText] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [image, setImage] = useState(null); // { file, previewUrl }\r\n\r\n  // 정렬 상태: latest | rating\r\n  const [sortBy, setSortBy] = useState(\"latest\");\r\n\r\n  // 미리보기 모달\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n\r\n  // 유저 정보 로드\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/me\");\r\n        if (alive) setUser(data || null);\r\n      } catch {\r\n        if (alive) setUser(null);\r\n      } finally {\r\n        if (alive) setLoadingUser(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  // 별점 클릭\r\n  const handleStarClick = (value) => setRating(value);\r\n\r\n  // 이미지 업로드 & preview URL 생성\r\n  useEffect(() => {\r\n    // 정리: 이전 URL revoke\r\n    return () => {\r\n      if (image?.previewUrl) URL.revokeObjectURL(image.previewUrl);\r\n    };\r\n  }, [image?.previewUrl]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) {\r\n      setImage(null);\r\n      return;\r\n    }\r\n    const previewUrl = URL.createObjectURL(file);\r\n    setImage({ file, previewUrl });\r\n  };\r\n\r\n  // KST 날짜 포맷: YYYY.MM.DD\r\n  const formatKSTDate = (date = new Date()) => {\r\n    const parts = new Intl.DateTimeFormat(\"ko-KR\", {\r\n      timeZone: \"Asia/Seoul\",\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    }).formatToParts(date);\r\n    const y = parts.find((p) => p.type === \"year\")?.value || \"\";\r\n    const m = parts.find((p) => p.type === \"month\")?.value || \"\";\r\n    const d = parts.find((p) => p.type === \"day\")?.value || \"\";\r\n    return `${y}.${m}.${d}`;\r\n  };\r\n\r\n  // 리뷰 등록 (로컬 상태만; 실제 서버 등록은 API 맞춰 연결)\r\n  const handleAddReview = () => {\r\n    if (!isReviewer) return; // 가드\r\n    if (!text.trim() || rating === 0) return;\r\n\r\n    const now = Date.now();\r\n    const newReview = {\r\n      id: now,           // key\r\n      ts: now,           // 정렬 기준 timestamp\r\n      name: user?.nickname || user?.username || user?.name || \"사용자\",\r\n      text: text.trim(),\r\n      rating,\r\n      date: formatKSTDate(new Date(now)),\r\n      image: image?.previewUrl || null, // 저장은 서버 업로드 후 URL로 교체 권장\r\n    };\r\n\r\n    setReviews((prev) => [newReview, ...prev]);\r\n    setText(\"\");\r\n    setRating(0);\r\n    setImage(null);\r\n  };\r\n\r\n  // 정렬된 리뷰 목록(파생값)\r\n  const sortedReviews = useMemo(() => {\r\n    const list = [...reviews];\r\n    if (sortBy === \"rating\") {\r\n      list.sort((a, b) => {\r\n        if (b.rating !== a.rating) return b.rating - a.rating;\r\n        return (b.ts || 0) - (a.ts || 0); // 별점 같으면 최신 우선\r\n      });\r\n    } else {\r\n      // latest\r\n      list.sort((a, b) => (b.ts || 0) - (a.ts || 0));\r\n    }\r\n    return list;\r\n  }, [reviews, sortBy]);\r\n\r\n  return (\r\n    <div className=\"review-page\">\r\n      {/* 상단 툴바: 제목 + 정렬 */}\r\n      <div className=\"review-toolbar\">\r\n        <h2 className=\"review-title\">전체 리뷰</h2>\r\n\r\n        <div className=\"review-sort\">\r\n          <label htmlFor=\"sort\" className=\"sr-only\">정렬</label>\r\n          <select\r\n            id=\"sort\"\r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"review-sort-select\"\r\n          >\r\n            <option value=\"latest\">최신순</option>\r\n            <option value=\"rating\">별점순</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 리뷰 리스트 */}\r\n      <div className=\"review-list\">\r\n        {sortedReviews.length === 0 ? (\r\n          <p className=\"review-empty\">아직 리뷰가 없습니다.</p>\r\n        ) : (\r\n          sortedReviews.map((review) => (\r\n            <div key={review.id} className=\"review-item\">\r\n              <div className=\"review-avatar\" aria-hidden>👤</div>\r\n              <div className=\"review-content\">\r\n                <div className=\"review-top\">\r\n                  <span className=\"review-name\">{review.name}</span>\r\n                  <span className=\"review-date\">{review.date}</span>\r\n                </div>\r\n                <div className=\"review-stars readonly\" aria-label={`별점 ${review.rating}점`}>\r\n                  {\"★\".repeat(review.rating)}\r\n                  {\"☆\".repeat(5 - review.rating)}\r\n                </div>\r\n                <div className=\"review-text\">{review.text}</div>\r\n                {review.image && (\r\n                  <img\r\n                    src={review.image}\r\n                    alt=\"리뷰 이미지\"\r\n                    className=\"review-image\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* 작성 영역: REVIEWER만 활성화 */}\r\n      <div className={`review-input-container ${!isReviewer ? \"disabled\" : \"\"}`}>\r\n        {loadingUser ? (\r\n          <div className=\"review-guard\">사용자 정보를 불러오는 중…</div>\r\n        ) : !isReviewer ? (\r\n          <div className=\"review-guard\">리뷰어만 리뷰를 작성할 수 있습니다.</div>\r\n        ) : null}\r\n\r\n        {/* 별점 선택 */}\r\n        <div className=\"star-rating\" role=\"radiogroup\" aria-label=\"별점 선택\">\r\n          {[1, 2, 3, 4, 5].map((value) => (\r\n            <button\r\n              key={value}\r\n              type=\"button\"\r\n              className={value <= rating ? \"star filled\" : \"star\"}\r\n              onClick={() => handleStarClick(value)}\r\n              aria-pressed={value <= rating}\r\n              aria-label={`${value}점`}\r\n            >\r\n              ★\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 텍스트 입력 */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"리뷰를 작성해주세요\"\r\n          className=\"review-input\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && handleAddReview()}\r\n          disabled={!isReviewer}\r\n        />\r\n\r\n        {/* 이미지 업로드 + 미리보기 */}\r\n        <div className=\"review-file-row\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageChange}\r\n            className=\"review-file\"\r\n            disabled={!isReviewer}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"preview-btn\"\r\n            onClick={() => setPreviewOpen(true)}\r\n            disabled={!isReviewer || !image}\r\n          >\r\n            미리보기\r\n          </button>\r\n          {image?.file && (\r\n            <span className=\"file-name\" title={image.file.name}>\r\n              {image.file.name}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <button onClick={handleAddReview} className=\"review-button\" disabled={!isReviewer}>\r\n          등록\r\n        </button>\r\n      </div>\r\n\r\n      {/* 미리보기 모달 */}\r\n      {previewOpen && image?.previewUrl && (\r\n        <div\r\n          className=\"modal-overlay\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          onClick={() => setPreviewOpen(false)}\r\n          onKeyDown={(e) => e.key === \"Escape\" && setPreviewOpen(false)}\r\n          tabIndex={-1}\r\n        >\r\n          <div\r\n            className=\"modal-content\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <img src={image.previewUrl} alt=\"업로드 이미지 미리보기\" />\r\n            <button\r\n              type=\"button\"\r\n              className=\"modal-close\"\r\n              onClick={() => setPreviewOpen(false)}\r\n            >\r\n              닫기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Review from \"./Review\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<Review />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ReviewPage","user","setUser","useState","loadingUser","setLoadingUser","isReviewer","role","toString","toUpperCase","reviews","setReviews","text","setText","rating","setRating","image","setImage","sortBy","setSortBy","previewOpen","setPreviewOpen","useEffect","alive","data","api","_unused","previewUrl","URL","revokeObjectURL","formatKSTDate","_parts$find","_parts$find2","_parts$find3","date","arguments","length","undefined","Date","parts","Intl","DateTimeFormat","timeZone","year","month","day","formatToParts","y","find","p","type","value","m","d","concat","handleAddReview","trim","now","newReview","id","ts","name","nickname","username","prev","sortedReviews","useMemo","list","sort","a","b","_jsxs","className","children","_jsx","htmlFor","onChange","e","target","map","review","repeat","src","alt","loading","onClick","handleStarClick","placeholder","onKeyDown","key","disabled","accept","_e$target$files","file","files","createObjectURL","title","tabIndex","stopPropagation","MapFeature","Routes","Route","index","element","Review","path","Navigate","to","replace"],"sourceRoot":""}