{"version":3,"file":"static/js/864.45337646.chunk.js","mappings":"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","sources":["features/mainPage/MainPage.js","features/mainPage/index.js"],"sourcesContent":["// src/features/main/MainPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\"; // ✅ Outlet context 사용\r\nimport api from \"../../api\";\r\nimport \"./MainPage.css\";\r\n\r\nconst MAP_ROUTE = \"/map\";\r\nconst MANAGE_ROUTE = \"/manage\";\r\n\r\nconst PREVIEW_LIMIT = 8;\r\nconst SUMMARY_LIMIT = 12;\r\n\r\nexport default function MainPage() {\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ AppLayout의 <Outlet context={{ user, setUser }}> 로부터 user 받기\r\n  const outletCtx = useOutletContext();\r\n  const user = outletCtx?.user ?? null;\r\n\r\n  // 권한 판별 유틸: OWNER/ADMIN만 허용, REVIEWER는 불가\r\n  const canManageStores = (u) => {\r\n    if (!u) return false;\r\n    // 단일 role 혹은 roles 배열 모두 대응\r\n    const single = (u.role ? String(u.role) : \"\").toUpperCase();\r\n    if (single) return single === \"OWNER\" || single === \"ADMIN\";\r\n    const arr = Array.isArray(u.roles) ? u.roles.map((r) => String(r).toUpperCase()) : [];\r\n    return arr.includes(\"OWNER\") || arr.includes(\"ADMIN\");\r\n  };\r\n\r\n  // ✅ '매장 관리' 클릭 핸들러: 로그인/권한 체크\r\n  const handleManageClick = () => {\r\n    if (!user) {\r\n      alert(\"로그인이 필요합니다.\");\r\n      navigate(\"/login\"); // 로그인 페이지 경로에 맞게 수정 가능\r\n      return;\r\n    }\r\n    if (!canManageStores(user)) {\r\n      // 요청: 리뷰어면 권한 없음 메시지\r\n      alert(\"권한이 없습니다. (리뷰어는 접근할 수 없습니다.)\");\r\n      return;\r\n    }\r\n    navigate(MANAGE_ROUTE);\r\n  };\r\n\r\n  // 1) joinable 미션 → 매장별 미리보기\r\n  const [msLoading, setMsLoading] = useState(true);\r\n  const [msError, setMsError] = useState(\"\");\r\n  const [missionStores, setMissionStores] = useState([]);\r\n\r\n  // 2) 모든 매장 한 줄 요약\r\n  const [sumLoading, setSumLoading] = useState(true);\r\n  const [sumError, setSumError] = useState(\"\");\r\n  const [summaries, setSummaries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        setMsLoading(true);\r\n        setMsError(\"\");\r\n\r\n        const { data } = await api.get(\"/itda/missions/joinable\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n\r\n        const byStore = new Map();\r\n        for (const m of list) {\r\n          const s = m.store || {};\r\n          const sid = s.id ?? m.storeId;\r\n          if (!sid) continue;\r\n\r\n          const poster =\r\n            m.posterUrl || m.poster || m.imageUrl || m.thumbnailUrl || \"\";\r\n\r\n          if (!byStore.has(sid)) {\r\n            byStore.set(sid, {\r\n              storeId: sid,\r\n              name: s.name || m.storeName || \"매장\",\r\n              address: s.address || m.address || \"\",\r\n              poster,\r\n              count: 1,\r\n            });\r\n          } else {\r\n            byStore.get(sid).count += 1;\r\n          }\r\n        }\r\n\r\n        const items = Array.from(byStore.values())\r\n          .sort((a, b) => b.count - a.count)\r\n          .slice(0, PREVIEW_LIMIT);\r\n\r\n        if (!alive) return;\r\n        setMissionStores(items);\r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setMsError(e?.response?.data?.message || \"미션/매장 미리보기를 불러오지 못했습니다.\");\r\n        setMissionStores([]);\r\n      } finally {\r\n        if (alive) setMsLoading(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        setSumLoading(true);\r\n        setSumError(\"\");\r\n\r\n        const { data } = await api.get(\"/itda/stores\");\r\n        const stores = Array.isArray(data) ? data : data?.items || [];\r\n        const pick = stores.slice(0, SUMMARY_LIMIT);\r\n\r\n        if (pick.length === 0) {\r\n          if (!alive) return;\r\n          setSummaries([]);\r\n          return;\r\n        }\r\n\r\n        const results = await Promise.allSettled(\r\n          pick.map(async (s) => {\r\n            const { data: sum } = await api.get(`/itda/stores/${s.id}/summary`);\r\n            const text = typeof sum === \"string\" ? sum : (sum?.summary ?? \"\");\r\n            return { id: s.id, name: s.name, summary: text };\r\n          })\r\n        );\r\n\r\n        const ok = results\r\n          .filter((r) => r.status === \"fulfilled\")\r\n          .map((r) => r.value);\r\n\r\n        if (!alive) return;\r\n        setSummaries(ok);\r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setSumError(e?.response?.data?.message || \"매장 요약을 불러오지 못했습니다.\");\r\n        setSummaries([]);\r\n      } finally {\r\n        if (alive) setSumLoading(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  const hasMissionStores = missionStores.length > 0;\r\n  const hasSummaries = summaries.length > 0;\r\n  const fmtCount = (n) => (n > 99 ? \"99+\" : String(n || 0));\r\n\r\n  return (\r\n    <div className=\"main-wrap\">\r\n      <h2 className=\"main-title\">무엇을 하시겠어요?</h2>\r\n\r\n      {/* 상단: 두 개의 주요 액션 버튼 */}\r\n      <div className=\"main-grid\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"main-card\"\r\n          onClick={() => navigate(MAP_ROUTE)}\r\n          aria-label=\"미션 이벤트 지도 보기\"\r\n        >\r\n          <div className=\"card-emoji\" aria-hidden>🗺️</div>\r\n          <div className=\"card-title\">Itda 이벤트 찾아보기!</div>\r\n          <div className=\"card-desc\">진행 가능한 미션을 지도에서 확인해요.</div>\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"main-card\"\r\n          onClick={handleManageClick}  // ✅ 권한 체크하는 핸들러\r\n          aria-label=\"내 매장 관리로 이동\"\r\n        >\r\n          <div className=\"card-emoji\" aria-hidden>🏪</div>\r\n          <div className=\"card-title\">매장 관리</div>\r\n          <div className=\"card-desc\">등록한 매장을 확인하고 편집해요.</div>\r\n        </button>\r\n      </div>\r\n\r\n      {/* 하단: 위아래 섹션 */}\r\n      <div className=\"main-sections vertical\">\r\n        {/* 섹션 A: 미션이 올라온 매장 미리보기 */}\r\n        <section className=\"home-section\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">미션이 올라온 매장</h3>\r\n            <button type=\"button\" className=\"link-btn\" onClick={() => navigate(MAP_ROUTE)}>\r\n              전체 보기 →\r\n            </button>\r\n          </div>\r\n\r\n          {msLoading && <div className=\"section-empty\">불러오는 중...</div>}\r\n          {!msLoading && msError && <div className=\"section-error\">{msError}</div>}\r\n          {!msLoading && !msError && !hasMissionStores && (\r\n            <div className=\"section-empty\">현재 진행 가능한 미션이 없습니다.</div>\r\n          )}\r\n\r\n          {!msLoading && !msError && hasMissionStores && (\r\n            <ul className=\"store-preview-grid\">\r\n              {missionStores.map((s) => (\r\n                <li\r\n                  key={s.storeId}\r\n                  className=\"store-card\"\r\n                  title={s.name}\r\n                  onClick={() => navigate(`${MAP_ROUTE}?storeId=${s.storeId}`)}\r\n                >\r\n                  <div className=\"store-thumb\">\r\n                    {s.poster ? (\r\n                      <img src={s.poster} alt=\"포스터\" />\r\n                    ) : (\r\n                      <div className=\"store-thumb-placeholder\">포스터 없음</div>\r\n                    )}\r\n                    <span className=\"badge-count\" aria-label={`진행중 미션 ${s.count}개`}>\r\n                      {fmtCount(s.count)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"store-body\">\r\n                    <div className=\"store-name\">{s.name}</div>\r\n                    {s.address && <div className=\"store-addr\">{s.address}</div>}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </section>\r\n\r\n        {/* 섹션 B: 모든 매장의 한 줄 요약 */}\r\n        <section className=\"home-section\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">매장의 한 줄 평가!</h3>\r\n          </div>\r\n\r\n          {sumLoading && <div className=\"section-empty\">불러오는 중...</div>}\r\n          {!sumLoading && sumError && <div className=\"section-error\">{sumError}</div>}\r\n          {!sumLoading && !sumError && !hasSummaries && (\r\n            <div className=\"section-empty\">요약이 없습니다.</div>\r\n          )}\r\n\r\n          {!sumLoading && !sumError && hasSummaries && (\r\n            <ul className=\"summary-list\">\r\n              {summaries.map((s) => (\r\n                <li\r\n                  key={s.id}\r\n                  className=\"summary-item\"\r\n                  title={s.name}\r\n                  onClick={() => navigate(`${MAP_ROUTE}?storeId=${s.id}`)}\r\n                >\r\n                  <div className=\"summary-name\">{s.name}</div>\r\n                  <div className=\"summary-text\">\r\n                    {s.summary || \"요약이 제공되지 않았습니다.\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/features/manageShop/index.js\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\n\r\nexport default function ManageShopFeature() {\r\n  return (\r\n    <div data-app=\"manage-shop\">\r\n      <Routes>\r\n        <Route index element={<MainPage />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["MAP_ROUTE","MANAGE_ROUTE","PREVIEW_LIMIT","SUMMARY_LIMIT","MainPage","_outletCtx$user","navigate","useNavigate","outletCtx","useOutletContext","user","msLoading","setMsLoading","useState","msError","setMsError","missionStores","setMissionStores","sumLoading","setSumLoading","sumError","setSumError","summaries","setSummaries","useEffect","alive","data","api","list","Array","isArray","items","byStore","Map","m","_s$id","s","store","sid","id","storeId","poster","posterUrl","imageUrl","thumbnailUrl","has","get","count","set","name","storeName","address","from","values","sort","a","b","slice","e","_e$response","_e$response$data","response","message","pick","length","ok","Promise","allSettled","map","async","_sum$summary","sum","concat","text","summary","filter","r","status","value","_e$response2","_e$response2$data","hasMissionStores","hasSummaries","_jsxs","className","children","_jsx","type","onClick","handleManageClick","alert","u","single","role","String","toUpperCase","arr","roles","includes","canManageStores","title","src","alt","n","ManageShopFeature","Routes","Route","index","element","path","Navigate","to","replace"],"sourceRoot":""}