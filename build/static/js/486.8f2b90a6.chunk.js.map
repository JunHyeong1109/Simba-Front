{"version":3,"file":"static/js/486.8f2b90a6.chunk.js","mappings":"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","sources":["features/reviewApproval/ReviewApproval.js","features/reviewApproval/index.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport \"./ReviewApproval.css\";\r\n\r\n/** 백엔드 확정 시 여기만 바꿔주세요 */\r\nconst ENDPOINTS = {\r\n  myStores: [\"/itda/me/stores\", \"/itda/stores\"], // 1순위 실패 시 2순위\r\n  storeReviews: () => `/itda/reviews`,           // GET /itda/reviews?storeId={storeId}\r\n  storeSummary: (storeId) => `/itda/stores/${storeId}/summary`,\r\n  reviewApprove: (id) => [\r\n    { method: \"patch\", url: `/itda/reviews/${id}/approve`, body: { approve: true } },\r\n    { method: \"patch\", url: `/itda/reviews/${id}`,         body: { status: \"APPROVED\" } },\r\n  ],\r\n  voucherIssue: (payload) => [\r\n    { method: \"post\", url: `/itda/vouchers/issue`, body: payload },\r\n    { method: \"post\", url: `/itda/vouchers`,       body: payload },\r\n  ],\r\n};\r\n\r\nexport default function ReviewApprovalPage() {\r\n  const { user } = useOutletContext() || {};\r\n  const navigate = useNavigate();\r\n\r\n  // ───────── 접근 가드 (OWNER만)\r\n  useEffect(() => {\r\n    const role = (user?.role || \"\").toString().toUpperCase();\r\n    if (!user) return; // 상위(AppLayout)에서 로딩 대기\r\n    if (role !== \"OWNER\") {\r\n      alert(\"사장님 전용 페이지입니다.\");\r\n      navigate(\"/\", { replace: true });\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  // ───────── 매장 목록\r\n  const [stores, setStores] = useState([]);\r\n  const [loadingStores, setLoadingStores] = useState(true);\r\n  const [storeErr, setStoreErr] = useState(\"\");\r\n  const [selectedStoreId, setSelectedStoreId] = useState(\"\");\r\n\r\n  // ───────── 리뷰 목록\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loadingReviews, setLoadingReviews] = useState(false);\r\n  const [reviewErr, setReviewErr] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"PENDING\"); // PENDING | APPROVED\r\n\r\n  // ───────── 매장 요약(옵션)\r\n  const [summary, setSummary] = useState(null);\r\n  const [loadingSummary, setLoadingSummary] = useState(false);\r\n\r\n  // ───────── 보상 모달\r\n  const [rewardOpen, setRewardOpen] = useState(false);\r\n  const [rewardTarget, setRewardTarget] = useState(null);\r\n  const [rewardTitle, setRewardTitle] = useState(\"리뷰 보상\");\r\n  const [rewardStart, setRewardStart] = useState(\"\");\r\n  const [rewardEnd, setRewardEnd] = useState(\"\");\r\n  const [rewardSubmitting, setRewardSubmitting] = useState(false);\r\n\r\n  // 매장 불러오기 (내 매장 → 실패 시 전체 매장)\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        setLoadingStores(true);\r\n        setStoreErr(\"\");\r\n        let list = [];\r\n        try {\r\n          const { data } = await api.get(ENDPOINTS.myStores[0]);\r\n          list = Array.isArray(data) ? data : data?.items || [];\r\n        } catch {\r\n          const { data } = await api.get(ENDPOINTS.myStores[1]);\r\n          list = Array.isArray(data) ? data : data?.items || [];\r\n          // ownerId 필드가 있으면 내 것만 필터\r\n          if (user?.id && list.length && list[0]?.ownerId != null) {\r\n            list = list.filter((s) => String(s.ownerId) === String(user.id));\r\n          }\r\n        }\r\n        if (!alive) return;\r\n        setStores(list);\r\n        if (list.length > 0) {\r\n          setSelectedStoreId(String(list[0].id ?? list[0].storeId));\r\n        }\r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setStoreErr(e?.response?.data?.message || \"매장 목록을 불러오지 못했습니다.\");\r\n        setStores([]);\r\n      } finally {\r\n        if (alive) setLoadingStores(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [user?.id]);\r\n\r\n  // 리뷰 불러오기 (GET /itda/reviews?storeId=)\r\n  const normalizeReview = (r) => {\r\n    let st = (r.status || \"\").toString().toUpperCase();\r\n    if (!st) {\r\n      const ok = r.approved === true || !!r.approvedAt;\r\n      st = ok ? \"APPROVED\" : \"PENDING\";\r\n    }\r\n    return {\r\n      id: r.id ?? r.reviewId,\r\n      // 여러 케이스에서 userId 안전 추출\r\n      userId: r.userId ?? r.reviewerId ?? r.writerId ?? r.user?.id ?? r.accountId,\r\n      userName: r.userName ?? r.nickname ?? r.username ?? r.user?.name ?? \"사용자\",\r\n      rating: r.rating ?? r.stars ?? 0,\r\n      text: r.text ?? r.content ?? \"\",\r\n      date: r.date ?? r.createdAt ?? r.created_at ?? \"\",\r\n      images: r.images ?? r.photos ?? [],\r\n      status: st,\r\n    };\r\n  };\r\n\r\n  const fetchReviews = async (storeId) => {\r\n    if (!storeId) return;\r\n    setLoadingReviews(true);\r\n    setReviewErr(\"\");\r\n    try {\r\n      const { data } = await api.get(ENDPOINTS.storeReviews(), {\r\n        params: { storeId },\r\n      });\r\n      const list = Array.isArray(data) ? data : data?.items || [];\r\n      const normalized = list.map(normalizeReview);\r\n      setReviews(normalized);\r\n    } catch (e) {\r\n      setReviews([]);\r\n      setReviewErr(e?.response?.data?.message || \"리뷰를 불러오지 못했습니다.\");\r\n    } finally {\r\n      setLoadingReviews(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedStoreId) return;\r\n    fetchReviews(selectedStoreId);\r\n  }, [selectedStoreId]);\r\n\r\n  // 요약 불러오기 (옵션)\r\n  useEffect(() => {\r\n    if (!selectedStoreId) return;\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        setLoadingSummary(true);\r\n        const { data } = await api.get(ENDPOINTS.storeSummary(selectedStoreId));\r\n        if (!alive) return;\r\n        setSummary(data || null);\r\n      } catch {\r\n        setSummary(null);\r\n      } finally {\r\n        if (alive) setLoadingSummary(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [selectedStoreId]);\r\n\r\n  const filtered = useMemo(() => {\r\n    const key = statusFilter.toUpperCase();\r\n    return reviews.filter((r) => r.status === key);\r\n  }, [reviews, statusFilter]);\r\n\r\n  // ───────── 단일 액션: 보상 (승인 → 바우처 발급)\r\n  const openReward = (review) => {\r\n    const today = new Date();\r\n    const iso = (d) => d.toISOString().slice(0, 10);\r\n    setRewardTarget(review);\r\n    setRewardTitle(\"리뷰 보상\");\r\n    setRewardStart(iso(today));\r\n    setRewardEnd(iso(new Date(today.getTime() + 1000 * 60 * 60 * 24 * 30))); // +30일\r\n    setRewardOpen(true);\r\n  };\r\n\r\n  const submitReward = async () => {\r\n    try {\r\n      if (!rewardTarget) return;\r\n      const userId =\r\n        rewardTarget.userId ??\r\n        rewardTarget.reviewerId ??\r\n        rewardTarget.writerId ??\r\n        rewardTarget.user?.id;\r\n      if (!userId) {\r\n        alert(\"리뷰 작성자 ID를 찾을 수 없어 보상을 발급할 수 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      setRewardSubmitting(true);\r\n\r\n      // 1) 승인(필요 시)\r\n      if (rewardTarget.status !== \"APPROVED\") {\r\n        const trials = ENDPOINTS.reviewApprove(rewardTarget.id);\r\n        let ok = false, err;\r\n        for (const t of trials) {\r\n          try {\r\n            await api[t.method](t.url, t.body);\r\n            ok = true;\r\n            break;\r\n          } catch (e) { err = e; }\r\n        }\r\n        if (!ok) throw err;\r\n      }\r\n\r\n      // 2) 바우처 발급\r\n      const payload = {\r\n        userId,                                  // 🎯 수령자\r\n        storeId: Number(selectedStoreId),        // 숫자 변환 (백엔드가 number 기대하는 경우 대비)\r\n        title: rewardTitle,\r\n        startAt: rewardStart,\r\n        endAt: rewardEnd,\r\n      };\r\n      const trials2 = ENDPOINTS.voucherIssue(payload);\r\n      let ok2 = false, err2;\r\n      for (const t of trials2) {\r\n        try {\r\n          await api[t.method](t.url, t.body);\r\n          ok2 = true;\r\n          break;\r\n        } catch (e) { err2 = e; }\r\n      }\r\n      if (!ok2) throw err2;\r\n\r\n      // ✅ UI 즉시 반영 (낙관적 업데이트 + 탭 이동)\r\n      setReviews((prev) =>\r\n        prev.map((r) =>\r\n          r.id === rewardTarget.id ? { ...r, status: \"APPROVED\" } : r\r\n        )\r\n      );\r\n      setRewardOpen(false);\r\n      setRewardTarget(null);\r\n      setStatusFilter(\"APPROVED\"); // 탭을 이동시켜 변화가 눈에 보이게\r\n      alert(\"보상이 발급되었습니다.\");\r\n\r\n      // (선택) 서버 최신화 다시 가져오고 싶으면 주석 해제\r\n      // await fetchReviews(selectedStoreId);\r\n    } catch (e) {\r\n      console.warn(\"voucher issue failed:\", e);\r\n      const msg = e?.response?.data?.message || e?.message || \"보상 발급 중 오류가 발생했습니다.\";\r\n      alert(msg);\r\n    } finally {\r\n      setRewardSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"rvap-root\">\r\n      <header className=\"rvap-head\">\r\n        <h1 className=\"rvap-title\">리뷰 확인 및 완료처리</h1>\r\n\r\n        <div className=\"rvap-controls\">\r\n          {/* 매장 선택 */}\r\n          <select\r\n            className=\"rvap-select\"\r\n            value={selectedStoreId}\r\n            onChange={(e) => setSelectedStoreId(e.target.value)}\r\n            disabled={loadingStores || stores.length === 0}\r\n          >\r\n            {stores.map((s) => {\r\n              const id = s.id ?? s.storeId;\r\n              return (\r\n                <option key={id} value={id}>\r\n                  {s.name || s.storeName || `매장#${id}`}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          {/* 상태 필터: PENDING / APPROVED 만 사용 */}\r\n          <div className=\"rvap-tabs\" role=\"tablist\" aria-label=\"리뷰 상태\">\r\n            {[\"PENDING\", \"APPROVED\"].map((k) => (\r\n              <button\r\n                key={k}\r\n                type=\"button\"\r\n                className={`rvap-tab ${statusFilter === k ? \"active\" : \"\"}`}\r\n                role=\"tab\"\r\n                aria-selected={statusFilter === k}\r\n                onClick={() => setStatusFilter(k)}\r\n              >\r\n                {k === \"PENDING\" ? \"검수 대기\" : \"승인됨\"}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* (옵션) 매장 요약 */}\r\n      {!loadingStores && !storeErr && selectedStoreId && (\r\n        <section className=\"rvap-summary\">\r\n          {loadingSummary ? (\r\n            <div className=\"rvap-chip muted\">요약 불러오는 중…</div>\r\n          ) : summary ? (\r\n            <div className=\"rvap-summary-grid\">\r\n              <div className=\"rvap-summary-item\">총 리뷰: {summary.total ?? \"-\"}</div>\r\n              <div className=\"rvap-summary-item\">평균 별점: {summary.avgRating ?? \"-\"}</div>\r\n              <div className=\"rvap-summary-item\">긍정: {summary.pos ?? \"-\"}</div>\r\n              <div className=\"rvap-summary-item\">부정: {summary.neg ?? \"-\"}</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"rvap-chip muted\">요약 없음</div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 매장 로딩/에러 */}\r\n      {loadingStores && <div className=\"rvap-empty\">매장 목록을 불러오는 중…</div>}\r\n      {!loadingStores && storeErr && <div className=\"rvap-error\">{storeErr}</div>}\r\n\r\n      {/* 리뷰 리스트 */}\r\n      {!loadingStores && !storeErr && (\r\n        <section className=\"rvap-list\">\r\n          {loadingReviews ? (\r\n            <>\r\n              <div className=\"rvap-card rvap-skeleton\" />\r\n              <div className=\"rvap-card rvap-skeleton\" />\r\n            </>\r\n          ) : reviewErr ? (\r\n            <div className=\"rvap-error\">{reviewErr}</div>\r\n          ) : filtered.length === 0 ? (\r\n            <div className=\"rvap-empty\">해당 상태의 리뷰가 없습니다.</div>\r\n          ) : (\r\n            filtered.map((r) => (\r\n              <article key={r.id} className=\"rvap-card\">\r\n                <div className=\"rvap-card-head\">\r\n                  <div className=\"rvap-avatar\">👤</div>\r\n                  <div className=\"rvap-meta\">\r\n                    <div className=\"rvap-user\">{r.userName}</div>\r\n                    <div className=\"rvap-date\">{r.date}</div>\r\n                    <div className=\"rvap-stars\">\r\n                      {\"★\".repeat(r.rating || 0)}\r\n                      {\"☆\".repeat(Math.max(0, 5 - (r.rating || 0)))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rvap-text\">{r.text}</div>\r\n\r\n                {Array.isArray(r.images) && r.images.length > 0 && (\r\n                  <div className=\"rvap-images\">\r\n                    {r.images.map((src, i) => (\r\n                      <img key={i} src={src} alt={`review-${r.id}-${i}`} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"rvap-actions\">\r\n                  <button type=\"button\" className=\"rvap-btn gift\" onClick={() => openReward(r)}>\r\n                    보상\r\n                  </button>\r\n                </div>\r\n              </article>\r\n            ))\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 보상 모달 */}\r\n      {rewardOpen && (\r\n        <div className=\"rvap-modal-backdrop\" onClick={() => !rewardSubmitting && setRewardOpen(false)}>\r\n          <div className=\"rvap-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <h3 className=\"rvap-modal-title\">보상(바우처) 발급</h3>\r\n            <div className=\"rvap-modal-body\">\r\n              <label className=\"rvap-field\">\r\n                <span className=\"rvap-label\">제목</span>\r\n                <input\r\n                  className=\"rvap-input\"\r\n                  value={rewardTitle}\r\n                  onChange={(e) => setRewardTitle(e.target.value)}\r\n                />\r\n              </label>\r\n              <div className=\"rvap-grid2\">\r\n                <label className=\"rvap-field\">\r\n                  <span className=\"rvap-label\">시작일</span>\r\n                  <input\r\n                    className=\"rvap-input\"\r\n                    type=\"date\"\r\n                    value={rewardStart}\r\n                    onChange={(e) => setRewardStart(e.target.value)}\r\n                  />\r\n                </label>\r\n                <label className=\"rvap-field\">\r\n                  <span className=\"rvap-label\">종료일</span>\r\n                  <input\r\n                    className=\"rvap-input\"\r\n                    type=\"date\"\r\n                    value={rewardEnd}\r\n                    onChange={(e) => setRewardEnd(e.target.value)}\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"rvap-modal-actions\">\r\n              <button className=\"rvap-btn ghost\" onClick={() => !rewardSubmitting && setRewardOpen(false)}>\r\n                취소\r\n              </button>\r\n              <button className=\"rvap-btn gift\" disabled={rewardSubmitting} onClick={submitReward}>\r\n                {rewardSubmitting ? \"발급 중…\" : \"발급\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport ReviewApproval from \"./ReviewApproval\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<ReviewApproval />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ENDPOINTS","myStores","storeReviews","storeSummary","storeId","concat","reviewApprove","id","method","url","body","approve","status","voucherIssue","payload","ReviewApprovalPage","_summary$total","_summary$avgRating","_summary$pos","_summary$neg","user","useOutletContext","navigate","useNavigate","useEffect","role","toString","toUpperCase","alert","replace","stores","setStores","useState","loadingStores","setLoadingStores","storeErr","setStoreErr","selectedStoreId","setSelectedStoreId","reviews","setReviews","loadingReviews","setLoadingReviews","reviewErr","setReviewErr","statusFilter","setStatusFilter","summary","setSummary","loadingSummary","setLoadingSummary","rewardOpen","setRewardOpen","rewardTarget","setRewardTarget","rewardTitle","setRewardTitle","rewardStart","setRewardStart","rewardEnd","setRewardEnd","rewardSubmitting","setRewardSubmitting","alive","list","data","api","Array","isArray","items","_unused","_list$","length","ownerId","filter","s","String","_list$0$id","e","_e$response","_e$response$data","response","message","normalizeReview","r","_r$id","_ref","_ref2","_ref3","_r$userId","_r$user","_ref4","_ref5","_ref6","_r$userName","_r$user2","_ref7","_r$rating","_ref8","_r$text","_ref9","_ref0","_r$date","_ref1","_r$images","st","approved","approvedAt","reviewId","userId","reviewerId","writerId","accountId","userName","nickname","username","name","rating","stars","text","content","date","createdAt","created_at","images","photos","async","params","normalized","map","_e$response2","_e$response2$data","fetchReviews","_unused2","filtered","useMemo","key","_jsxs","className","children","_jsx","value","onChange","target","disabled","_s$id","storeName","k","type","onClick","total","avgRating","pos","neg","_Fragment","repeat","Math","max","src","i","alt","review","today","Date","iso","d","toISOString","slice","getTime","openReward","stopPropagation","_ref10","_ref11","_rewardTarget$userId","_rewardTarget$user","trials","err","ok","t","Number","title","startAt","endAt","trials2","err2","ok2","prev","_objectSpread","_e$response3","_e$response3$data","console","warn","msg","MapFeature","Routes","Route","index","element","ReviewApproval","path","Navigate","to"],"sourceRoot":""}